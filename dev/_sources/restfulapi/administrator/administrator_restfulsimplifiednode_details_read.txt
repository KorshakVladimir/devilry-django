.. _administrator_restfulsimplifiednode_details_read:

=============================================================================
GET /administrator/restfulsimplifiednode/id
=============================================================================

Retrieve a Node.

The underlying data model where the item is retrieved from is defined in
:class:`devilry.apps.core.models.Node`.
The :ref:`simplified` that the server forwards this request to is
:meth:`devilry.apps.administrator.simplified.simplifiednode.SimplifiedNode.read`.


********
Request
********


Example
################

.. code-block:: javascript

    GET /administrator/restfulsimplifiednode/id



Another example, this one uses the optional *result_fieldgroups* parameter.

.. code-block:: javascript

    GET /administrator/restfulsimplifiednode/id

    {
        result_fieldgroups: ["admins"]
    }


Required request parameters encoded in the URL
##############################################

id
--------------

The unique identifier of a Node. You will typically get
this id in response from a search.



Optional request parameters
###########################

Optional request parameters are encoded as a JSON object and sent as the
request body as shown in the example above.

result_fieldgroups
------------------
A list of group names. Each group adds an additional set of fields to the
resulting data. The following group names are available:

    admins
        *Expands to the following fields:*
        
            admins__username
                Actual location of the field:
                    :class:`devilry.apps.core.models.Node`
                About the field:
                    List of many values.
                Type
                    List of strings
        





**************
Response
**************

On success
##########

Example
-------

.. code-block:: javascript

    200 OK

    {
        id: 15,
        parentnode: 15,
        short_name: "my_example001_value",
        long_name: "My example value"
    }

Success response details
------------------------

As long as the Node is deleted without an error, the
response is *HTTP 200* with the requested data in the body.
The result always contains the following fields:

    
        id
            Actual location of the field:
                :class:`devilry.apps.core.models.Node`
            About the field:
                Autogenerated identifier.
            Type
                Integer
    
        parentnode
            Actual location of the field:
                :class:`devilry.apps.core.models.Node`
            About the field:
                Autogenerated identifier.
            Type
                Integer
    
        short_name
            Actual location of the field:
                :class:`devilry.apps.core.models.Node`
            About the field:
                Max 20 characters. Only numbers, lowercase characters, '_' and '-'. 
            Type
                String
    
        long_name
            Actual location of the field:
                :class:`devilry.apps.core.models.Node`
            About the field:
                A longer name, more descriptive than "Short name". This is the name visible to students.
            Type
                String
    


However, there may be more fields if specified with the ``result_fieldgroups``
request parameter.




On error
########

On errors, we respond with one of the :ref:`restful_api_error_statuscodes`.
