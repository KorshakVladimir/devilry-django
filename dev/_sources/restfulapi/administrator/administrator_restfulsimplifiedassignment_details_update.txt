.. _administrator_restfulsimplifiedassignment_details_update:

=============================================================================
PUT /administrator/restfulsimplifiedassignment/id
=============================================================================

Update a Assignment.

The underlying data model where the item is updated is defined in
:class:`devilry.apps.core.models.Assignment`.
The :ref:`simplified` that the server forwards this request to is
:meth:`devilry.apps.administrator.simplified.SimplifiedAssignment.update`.



********
Request
********


Example
################

.. code-block:: javascript

    PUT /administrator/restfulsimplifiedassignment/id

    {
        must_pass: true,
        short_name: "my_example001_value",
        publishing_time: "2010-02-22 22:32:10",
        parentnode: 15,
        delivery_types: 20,
        long_name: "My example value",
        anonymous: true
    }


Required request parameters encoded in the URL
##############################################

id
--------------

The unique identifier of a Assignment as the last item in the
URL. You will typically get this id in response from a search.


Required request parameters
###########################

The following request parameters are encoded as a JSON object and sent as the
request body as shown in the example above.



must_pass
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    Each student must get a passing grade on this assignment to get a passing grade on the period.
Type
    Boolean


short_name
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    Max 20 characters. Only numbers, lowercase characters, '_' and '-'. 
Type
    String


publishing_time
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    The time when the assignment is to be published (visible to students and examiners).
Type
    DateTime string (YYYY-MM-DD hh:mm:ss)


parentnode
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Period`
About the field:
    Autogenerated identifier.
Type
    Integer


delivery_types
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    This option controls what types of deliveries this assignment accepts. See docs for Delivery for documentation of accepted values.
Type
    Integer


long_name
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    A longer name, more descriptive than "Short name". This is the name visible to students.
Type
    String


anonymous
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    Specifies if this assignment is anonymous.
Type
    Boolean




**************
Response
**************

On success
##########

Example
----------------

.. code-block:: javascript

    200 OK

    {
        must_pass: true,
        short_name: "my_example001_value",
        publishing_time: "2010-02-22 22:32:10",
        parentnode: 15,
        delivery_types: 20,
        long_name: "My example value",
        anonymous: true,
        id: 15
    }


Success response details
------------------------

As long as the Assignment is updated without an error, the
response is *HTTP 201* with the requested data in the body.  The result always
contains the data you sent in to the update method, however some values may
have been changed due to logic performed on the server before saving.



On error
########

On errors, we respond with one of the :ref:`restful_api_error_statuscodes`.
