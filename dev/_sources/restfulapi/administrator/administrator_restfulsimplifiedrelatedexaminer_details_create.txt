.. _administrator_restfulsimplifiedrelatedexaminer_details_create:

=============================================================================
POST /administrator/restfulsimplifiedrelatedexaminer/
=============================================================================

Create a related examiner.

The underlying data model where the item is created is defined in
:class:`devilry.apps.core.models.relateduser.RelatedExaminer`.
The :ref:`simplified` that the server forwards this request to is
:meth:`devilry.apps.administrator.simplified.SimplifiedRelatedExaminer.create`.


********
Request
********


Example
################

.. code-block:: javascript

    POST /administrator/restfulsimplifiedrelatedexaminer/

    {
        userspec: "My example value",
        period: 15
    }


Required request parameters
###########################

The following request parameters are encoded as a JSON object and sent as the
request body as shown in the example above.



userspec
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.relateduser.RelatedExaminer`
About the field:
    One or more usernames prefixed by an optional name and followed by optional tags. Format: Group name:: usernameA, ...., usernameN (tag1, tag2, ..., tagN). For RelatedExaminer, only a single username is allowed. For RelatedExaminer, group name can not be specified.
Type
    String


period
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Period`
About the field:
    Autogenerated identifier.
Type
    Integer




**************
Response
**************

On success
##########

Example
----------------

.. code-block:: javascript

    201 CREATED

    {
        userspec: "My example value",
        period: 15,
        id: 15
    }


Success response details
------------------------

As long as the related examiner is created without an error, the
response is *HTTP 201* with the requested data in the body. The result always
contains the request data with the *id* field added, however some values may
have been changed due to logic performed on the server before saving.



On error
########

On errors, we respond with one of the :ref:`restful_api_error_statuscodes`.
