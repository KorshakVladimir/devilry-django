.. _administrator_restfulsimplifiedassignment_details_create:

=============================================================================
POST /administrator/restfulsimplifiedassignment/
=============================================================================

Create a Assignment.

The underlying data model where the item is created is defined in
:class:`devilry.apps.core.models.Assignment`.
The :ref:`simplified` that the server forwards this request to is
:meth:`devilry.apps.administrator.simplified.SimplifiedAssignment.create`.


********
Request
********


Example
################

.. code-block:: javascript

    POST /administrator/restfulsimplifiedassignment/

    {
        must_pass: true,
        short_name: "my_example001_value",
        publishing_time: "2010-02-22 22:32:10",
        parentnode: 15,
        long_name: "My example value",
        attempts: 20,
        anonymous: true,
        maxpoints: 20
    }


Required request parameters
###########################

The following request parameters are encoded as a JSON object and sent as the
request body as shown in the example above.



must_pass
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    Each student must get a passing grade on this assignment to get a passing grade on the period.
Type
    Boolean


short_name
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    Max 20 characters. Only numbers, lowercase characters, '_' and '-'. 
Type
    String


publishing_time
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    The time when the assignment is to be published (visible to students and examiners).
Type
    DateTime string (YYYY-MM-DD hh:mm:ss)


parentnode
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Period`
About the field:
    Autogenerated identifier.
Type
    Integer


long_name
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    A longer name, more descriptive than "Short name". This is the name visible to students.
Type
    String


attempts
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    The number of attempts a student get on this assignment. This is not a hard limit, but it makes the work of the examiners easier because the system will close groups (leaving students unable to deliver more attempts) when they have this many published feedbacks. Examiners can open closed groups, and they are notified when a group is automatically closed. Leave this empty if you do not want to use this feature.
Type
    Integer


anonymous
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    Specifies if this assignment is anonymous.
Type
    Boolean


maxpoints
--------------------------------------------------

Actual location of the field:
    :class:`devilry.apps.core.models.Assignment`
About the field:
    The maximum number of points possible without scaling.
Type
    Integer




**************
Response
**************

On success
##########

Example
----------------

.. code-block:: javascript

    201 CREATED

    {
        must_pass: true,
        short_name: "my_example001_value",
        publishing_time: "2010-02-22 22:32:10",
        parentnode: 15,
        long_name: "My example value",
        attempts: 20,
        anonymous: true,
        maxpoints: 20,
        id: 15
    }


Success response details
------------------------

As long as the Assignment is created without an error, the
response is *HTTP 201* with the requested data in the body. The result always
contains the request data with the *id* field added, however some values may
have been changed due to logic performed on the server before saving.



On error
########

On errors, we respond with one of the :ref:`restful_api_error_statuscodes`.
