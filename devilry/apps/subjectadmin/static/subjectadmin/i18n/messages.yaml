subjectadmin.assignment.anonymous.help: 'For <strong>exams</strong>, this should normally be <em>checked</em>. If an assignment is anonymous, examiners see a candidate-id instead of a username. A candidate-id <strong>must</strong> be set for each student.'
subjectadmin.assignment.anonymous.label: 'Anonymous?'
subjectadmin.assignment.is_anonymous.title: Anonymous
subjectadmin.assignment.is_anonymous.body: "Examiners and students can <strong>not</strong> see each other and they can <strong>not</strong> communicate."
subjectadmin.assignment.not_anonymous.title: Not anonymous
subjectadmin.assignment.not_anonymous.body: Examiners and students can see each other and communicate.
subjectadmin.assignment.delivery_types.help: 'If you only use Devilry to give feedback (students deliver through an alternative channel), set this to <em>Not using Devilry</em>.'
subjectadmin.assignment.delivery_types.label: 'How do students add deliveries?'
subjectadmin.assignment.delivery_types.electronic : Using Devilry
subjectadmin.assignment.delivery_types.nonelectronic : Not using Devilry
subjectadmin.assignment.long_name.help: "Choose a descriptive name for your assignment."
subjectadmin.assignment.long_name.label: Name
subjectadmin.assignment.long_name.example: "Example: Obligatory assignment 1"
subjectadmin.assignment.short_name.help: "Choose a short name with at most 20 letters for your assignment. 'Can only contain lowercase english letters (<em>a-z</em>), <em>numbers</em>, <em>'_'</em> and <em>'-'</em>. This is used the the regular name takes to much space."
subjectadmin.assignment.short_name.label: Short name
subjectadmin.assignment.short_name.example: "Example: assignment1"
subjectadmin.assignment.publishing_time.help: 'Choose a time when time when students will be able to start adding deliveries on the assignment. The default is to publish assignment when creating the assignment.'
subjectadmin.assignment.publishing_time.edithelp: 'Choose a time when time when students will be able to start adding deliveries on the assignment.'
subjectadmin.assignment.publishing_time.label: Publishing time
subjectadmin.assignment.notpublished.title: Not published
subjectadmin.assignment.notpublished.body: 'Will be published {publishing_time}.'
subjectadmin.assignment.published.title: Published
subjectadmin.assignment.published.body: 'Publishing time was {publishing_time}.'
subjectadmin.assignment.gradeeditor: Grade editor
subjectadmin.assignment.add_all_relatedstudents.label: "Add all students to this assignment?"
subjectadmin.assignment.add_all_relatedstudents.help: "If this option is selected, all students registered on the period will automatically be added to the assignment when it is created."
subjectadmin.assignment.first_deadline.label: First deadline
subjectadmin.assignment.first_deadline.help: The default deadline added to each student when adding new students to the assignment.
subjectadmin.assignment.error.period_doesnotexist: "Period {period_id} does not exist."
subjectadmin.assignment.error.not_active_period: "Period {period_id} is not an active period."
subjectadmin.assignment.error.first_deadline_none: "Required when automatically adding related students."
subjectadmin.assignment.error.no_active_periods: "No active periods found."
subjectadmin.assignment.autosetup_examiners.label: "Automatically setup examiners?"
subjectadmin.assignment.autosetup_examiners.help: "Automatically setup examiners on this assignment by matching tags on examiners and students registered on the period."
subjectadmin.assignment.activeperiod.label: "Period"
subjectadmin.assignment.activeperiod.help: "Choose the period where the assignment belongs."
subjectadmin.assignment.waitingforfeedback: Waiting for feedback
subjectadmin.assignment.upcoming_deadlines: Upcoming deadlines
subjectadmin.assignment.manage_students: Manage students
subjectadmin.assignment.manage_deadlines: Manage deadlines

subjectadmin.createnewassignment.title: Create new assignment
subjectadmin.createnewassignment.metatext: "Create new assignment in <em>{period}</em>. Students add deliveries <em>{type}</em>."
subjectadmin.createnewassignment.success.gotocreated: "Go to {assignment}"
subjectadmin.createnewassignment.success.addanother: "Add another assignment"
subjectadmin.createnewassignment.success.addanother_similar: "Add another <em>{deliverytype}</em>-assignment in <em>{period}</em>"
subjectadmin.createnewassignment.success.title: "Created {assignment}"

subjectadmin.dashboard.actionstitle: Actions
subjectadmin.dashboard.createnewassignment: Create new assignment
subjectadmin.dashboard.browseall: Browse everything i have access to
subjectadmin.dashboard.registerqualifiesforfinal: Register students that qualify for final exams
"subjectadmin.dashboard.overview-and-statistics": Overview and statistics

subjectadmin.managestudents.breadcrumbtitle: Manage students
subjectadmin.managestudents.addstudents.title: Add students
subjectadmin.managestudents.addstudents.tips: Choose the students you want to add to the assignment, and click save.
subjectadmin.managestudents.addstudents.relatedref: "Only students registered on {periodpath} is available in the list."
subjectadmin.managestudents.addstudents.relatedbtn: Manage available students
subjectadmin.managestudents.singlegroup.topmessage: 'One {groupunit} selected.'
subjectadmin.managestudents.multiselecthowto: 'Hold down <strong>{shortcutkey}</strong> to select multiple {groupunit_plural}.'
subjectadmin.groupunit.projectassignment: 'group'
subjectadmin.groupunit.projectassignment_plural: 'groups'
subjectadmin.groupunit.not_projectassignment: 'student'
subjectadmin.groupunit.not_projectassignment_plural: 'students'
